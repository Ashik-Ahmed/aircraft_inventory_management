const { formatDate } = require('./dateFunctionality');

exports.exportStockReport = async (stockDetailsReport) => {
    console.log('Exporting Stock Report', stockDetailsReport);

    const cols = [
        { field: 'serial', header: 'Ser.' },
        { field: 'cardNo', header: 'Card No.' },
        { field: 'stockNo', header: 'Part No.' },
        { field: 'nomenclature', header: 'Nomenclature' },
        { field: 'unit', header: 'A/U' },
        { field: 'quantity', header: 'Qty Balance' },
        { field: 'received', header: 'Received & Dt' },
        { field: 'expenditure', header: 'Expenditure & Dt' },
        { field: 'latestExpiry', header: 'Latest Expiry' },
    ]

    const exportColumns = stockDetailsReport?.selectedColumns?.map(col => ({ title: col.header, dataKey: col.field }))

    let customizedStockReport = stockDetailsReport?.stockReport?.map((stock, index) => {
        const customizedlatestExpiry = stock?.latestExpiry ? formatDate(stock?.latestExpiry) : 'N/A';
        const customizedReceived = stock?.stockHistory?.filter((history) => history?.actionStatus == 'Received')
            .map((stock) => `${stock?.quantity}X${formatDate(stock?.createdAt)}`)
            .join('\n');
        const customizedExpenditure = stock?.stockHistory?.filter((history) => history?.actionStatus == 'Expenditure')
            .map((stock) => `${stock?.quantity}X${formatDate(stock?.createdAt)}`)
            .join('\n');
        return { serial: index + 1, ...stock, latestExpiry: customizedlatestExpiry, received: customizedReceived, expenditure: customizedExpenditure }
    })


    stockDetailsReport.stockReport = customizedStockReport;
    console.log("customizedReportData", stockDetailsReport);
    const exportToPDF = () => {
        import('jspdf').then(jsPDF => {
            import('jspdf-autotable').then(() => {
                const doc = new jsPDF.default(0, 2);

                if (stockDetailsReport) {
                    // Header
                    doc.setFontSize(15);
                    doc.setTextColor(10);
                    doc.text(`ARMY Aviation`, 20, 22);
                    doc.setFontSize(12);
                    doc.text(`Stock Report for: ${stockDetailsReport?.aircraft == "All" ? "All Aircraft" : stockDetailsReport?.aircraft}`, 20, 35);
                    doc.text(`Expiry Filter: ${stockDetailsReport?.expiryFilter || "None"}`, 20, 45);

                    // doc.setFontSize(11);
                    // doc.text(`Report Month: ${conveyanceData?.reportMonth}`, 30, 45);
                    // doc.text(`Total Requisition: ${conveyanceData?.allEmployeeTotalConveyances}`, 30, 55);

                    doc.text(`Date: ${formatDate(new Date() - 1)}`, 20, 55);
                    doc.text(`Generated By: User Name`, 20, 65);
                }

                doc.autoTable(exportColumns, stockDetailsReport?.stockReport, {
                    startY: 85,
                    styles: {
                        lineWidth: 0.01, // Width of the line for the borders
                        lineColor: [200, 200, 200], // Color of the line for the borders, [0, 0, 0] is black
                    },
                    didDrawPage: function (data) {

                        // Footer
                        var str = "Page " + doc.internal.getNumberOfPages();

                        doc.setFontSize(10);

                        // jsPDF 1.4+ uses getWidth, <1.4 uses .width
                        var pageSize = doc.internal.pageSize;
                        var pageHeight = pageSize.height
                            ? pageSize.height
                            : pageSize.getHeight();
                        doc.text(str, data.settings.margin.left, pageHeight - 10);
                    }
                });
                var pageSize = doc.internal.pageSize;
                var pageHeight = pageSize.height
                    ? pageSize.height
                    : pageSize.getHeight();
                var pageWidth = pageSize.width
                    ? pageSize.width
                    : pageSize.getWidth();

                // var signatureLine = "__________________"
                // var signature = conveyanceData.generatedBy;
                // doc.text(signatureLine, 20, pageHeight - 40);
                // doc.text(signature, 20, pageHeight - 30);
                // doc.text(signatureLine, pageWidth - 80, pageHeight - 40);
                // doc.text('Samiur Rahman', pageWidth - 80, pageHeight - 30);
                // doc.text('Director, Admin & Finance', pageWidth - 80, pageHeight - 24);


                doc.save(`Stock-Report-${new Date()}.pdf`);
            })
        })

    }
    exportToPDF()
}